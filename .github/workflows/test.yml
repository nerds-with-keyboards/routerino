name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22, 24]
        react-config:
          - name: "React 17"
            packages: "react@^17.0.0 react-dom@^17.0.0 @testing-library/react@^12.1.5"
          - name: "React 18"
            packages: "react@^18.0.0 react-dom@^18.0.0"
          - name: "React 19"
            packages: "react@^19.0.0 react-dom@^19.0.0"

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install ${{ matrix.react-config.name }}
        run: npm install --no-save ${{ matrix.react-config.packages }}

      - name: Build library
        run: npm run build

      - name: Run tests (Node ${{ matrix.node-version }}, ${{ matrix.react-config.name }})
        run: npm test -- --run
        # Skip static build tests for React 17 due to jsx-runtime compatibility
        if: matrix.react-config.name != 'React 17'

      - name: Run tests without static build (Node ${{ matrix.node-version }}, ${{ matrix.react-config.name }})
        run: npm test -- --run --exclude="**/static-build.test.*"
        # Only run for React 17
        if: matrix.react-config.name == 'React 17'

      - name: Run linter
        run: npm run lint
        # Only run linter once to save time
        if: matrix.node-version == 20 && matrix.react-config.name == 'React 19'
